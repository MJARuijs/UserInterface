package userinterface.animation.effectsimport math.Colorimport userinterface.UIColorimport userinterface.UniversalParameters.ANIMATION_DURATIONimport userinterface.animation.Animationimport userinterface.animation.ColorAnimationimport userinterface.animation.animationtypes.ColorAnimationTypeimport userinterface.items.Itemimport userinterface.items.backgrounds.ColorTypeclass ColorEffect(private val changeToColor: Color, private val colorType: ColorType, private val animationType: ColorAnimationType, duration: Float = ANIMATION_DURATION) : Effect(duration) {        constructor(uiColor: UIColor, colorType: ColorType, animationType: ColorAnimationType, duration: Float = ANIMATION_DURATION) : this(uiColor.color, colorType, animationType, duration)        override fun applyOn(item: Item): ArrayList<Animation> {        return arrayListOf(ColorAnimation(duration, item, changeToColor, animationType, colorType))    }        override fun removeFrom(item: Item): ArrayList<Animation> {        return arrayListOf(ColorAnimation(duration, item, -changeToColor, animationType, colorType))    }}